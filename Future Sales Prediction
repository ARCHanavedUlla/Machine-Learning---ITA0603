# Future Sales Prediction using Linear Regression

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# -------------------------
# 1. Create a sample dataset
# -------------------------
# Suppose we have monthly sales data
data = {
    'Month': np.arange(1, 13),  # months 1 to 12
    'Sales': [120, 135, 150, 160, 170, 180, 190, 200, 210, 220, 230, 250]
}

df = pd.DataFrame(data)
print("Sample Sales Data:\n", df)

# -------------------------
# 2. Train-Test Split
# -------------------------
X = df[['Month']]       # Feature: Month
y = df['Sales']         # Target: Sales

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# -------------------------
# 3. Train Model
# -------------------------
model = LinearRegression()
model.fit(X_train, y_train)

# -------------------------
# 4. Predictions
# -------------------------
y_pred = model.predict(X_test)

print("\nModel Coefficients:")
print("Slope (Coefficient):", model.coef_[0])
print("Intercept:", model.intercept_)

print("\nPerformance Metrics:")
print("MSE:", mean_squared_error(y_test, y_pred))
print("R2 Score:", r2_score(y_test, y_pred))

# -------------------------
# 5. Future Sales Prediction
# -------------------------
future_months = np.array([[13], [14], [15]])  # Predict for next 3 months
future_sales = model.predict(future_months)

print("\nFuture Sales Predictions:")
for month, sale in zip(future_months.flatten(), future_sales):
    print(f"Month {month}: Predicted Sales = {sale:.2f}")

# -------------------------
# 6. Visualization
# -------------------------
plt.scatter(X, y, color='blue', label='Actual Sales')
plt.plot(X, model.predict(X), color='red', label='Regression Line')
plt.scatter(future_months, future_sales, color='green', marker='x', s=100, label='Future Predictions')
plt.xlabel("Month")
plt.ylabel("Sales")
plt.title("Future Sales Prediction using Linear Regression")
plt.legend()
plt.show()
