# Credit Score Classification
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

# Sample synthetic dataset
data = {
    "Income": [40000, 60000, 80000, 20000, 100000, 30000, 120000, 70000],
    "Age": [25, 35, 45, 23, 50, 30, 40, 28],
    "LoanAmount": [10000, 20000, 15000, 5000, 25000, 8000, 30000, 12000],
    "CreditScore": [0, 1, 1, 0, 1, 0, 1, 1]   # 1 = Good, 0 = Bad
}
df = pd.DataFrame(data)

X = df.drop("CreditScore", axis=1)
y = df["CreditScore"]

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)

# Scaling
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Train model
model = LogisticRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

print("Accuracy:", accuracy_score(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))
